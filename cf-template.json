{
    "TemplateBody": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Outputs": {
            "WebEndpoint": {
                "Description": "API Gateway endpoint URL for Prod stage",
                "Value": {
                    "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
                }
            }
        },
        "Description": "sam-web-api",
        "Resources": {
            "putItemFunctionApiPermissionProd": {
                "Type": "AWS::Lambda::Permission",
                "Properties": {
                    "Action": "lambda:InvokeFunction",
                    "Principal": "apigateway.amazonaws.com",
                    "FunctionName": {
                        "Ref": "putItemFunction"
                    },
                    "SourceArn": {
                        "Fn::Sub": [
                            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/",
                            {
                                "__Stage__": "*",
                                "__ApiId__": {
                                    "Ref": "ServerlessRestApi"
                                }
                            }
                        ]
                    }
                }
            },
            "putItemFunction": {
                "Type": "AWS::Lambda::Function",
                "Properties": {
                    "Code": {
                        "S3Bucket": "sam.hello",
                        "S3Key": "f61f6dd54d56f7f8fe4ed619cf77fdd4"
                    },
                    "Description": "A simple example includes a HTTP post method to add one item to a DynamoDB table.",
                    "Tags": [
                        {
                            "Value": "SAM",
                            "Key": "lambda:createdBy"
                        }
                    ],
                    "MemorySize": 128,
                    "Environment": {
                        "Variables": {
                            "SAMPLE_TABLE": {
                                "Ref": "SampleTable"
                            },
                            "LOCAL_DYNAMODB_ENDPOINT": "http://localhost:8000"
                        }
                    },
                    "Handler": "src/handlers/put-item.putItemHandler",
                    "Role": {
                        "Fn::GetAtt": [
                            "putItemFunctionRole",
                            "Arn"
                        ]
                    },
                    "Architectures": [
                        "x86_64"
                    ],
                    "Timeout": 100,
                    "Runtime": "nodejs14.x"
                }
            },
            "getAllItemsFunction": {
                "Type": "AWS::Lambda::Function",
                "Properties": {
                    "Code": {
                        "S3Bucket": "sam.hello",
                        "S3Key": "f61f6dd54d56f7f8fe4ed619cf77fdd4"
                    },
                    "Description": "A simple example includes a HTTP get method to get all items from a DynamoDB table.",
                    "Tags": [
                        {
                            "Value": "SAM",
                            "Key": "lambda:createdBy"
                        }
                    ],
                    "MemorySize": 128,
                    "Environment": {
                        "Variables": {
                            "SAMPLE_TABLE": {
                                "Ref": "SampleTable"
                            },
                            "LOCAL_DYNAMODB_ENDPOINT": "http://localhost:8000"
                        }
                    },
                    "Handler": "src/handlers/get-all-items.getAllItemsHandler",
                    "Role": {
                        "Fn::GetAtt": [
                            "getAllItemsFunctionRole",
                            "Arn"
                        ]
                    },
                    "Architectures": [
                        "x86_64"
                    ],
                    "Timeout": 100,
                    "Runtime": "nodejs14.x"
                }
            },
            "getByIdFunctionRole": {
                "Type": "AWS::IAM::Role",
                "Properties": {
                    "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Action": [
                                    "sts:AssumeRole"
                                ],
                                "Effect": "Allow",
                                "Principal": {
                                    "Service": [
                                        "lambda.amazonaws.com"
                                    ]
                                }
                            }
                        ]
                    },
                    "ManagedPolicyArns": [
                        "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                    ],
                    "Policies": [
                        {
                            "PolicyName": "getByIdFunctionRolePolicy0",
                            "PolicyDocument": {
                                "Statement": [
                                    {
                                        "Action": [
                                            "dynamodb:GetItem",
                                            "dynamodb:DeleteItem",
                                            "dynamodb:PutItem",
                                            "dynamodb:Scan",
                                            "dynamodb:Query",
                                            "dynamodb:UpdateItem",
                                            "dynamodb:BatchWriteItem",
                                            "dynamodb:BatchGetItem",
                                            "dynamodb:DescribeTable",
                                            "dynamodb:ConditionCheckItem"
                                        ],
                                        "Resource": [
                                            {
                                                "Fn::Sub": [
                                                    "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                    {
                                                        "tableName": {
                                                            "Ref": "SampleTable"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                    {
                                                        "tableName": {
                                                            "Ref": "SampleTable"
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "Effect": "Allow"
                                    }
                                ]
                            }
                        }
                    ],
                    "Tags": [
                        {
                            "Value": "SAM",
                            "Key": "lambda:createdBy"
                        }
                    ]
                }
            },
            "SampleTable": {
                "Type": "AWS::DynamoDB::Table",
                "Properties": {
                    "ProvisionedThroughput": {
                        "WriteCapacityUnits": 2,
                        "ReadCapacityUnits": 2
                    },
                    "AttributeDefinitions": [
                        {
                            "AttributeName": "id",
                            "AttributeType": "S"
                        }
                    ],
                    "KeySchema": [
                        {
                            "KeyType": "HASH",
                            "AttributeName": "id"
                        }
                    ]
                }
            },
            "getAllItemsFunctionApiPermissionProd": {
                "Type": "AWS::Lambda::Permission",
                "Properties": {
                    "Action": "lambda:InvokeFunction",
                    "Principal": "apigateway.amazonaws.com",
                    "FunctionName": {
                        "Ref": "getAllItemsFunction"
                    },
                    "SourceArn": {
                        "Fn::Sub": [
                            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/",
                            {
                                "__Stage__": "*",
                                "__ApiId__": {
                                    "Ref": "ServerlessRestApi"
                                }
                            }
                        ]
                    }
                }
            },
            "getAllItemsFunctionRole": {
                "Type": "AWS::IAM::Role",
                "Properties": {
                    "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Action": [
                                    "sts:AssumeRole"
                                ],
                                "Effect": "Allow",
                                "Principal": {
                                    "Service": [
                                        "lambda.amazonaws.com"
                                    ]
                                }
                            }
                        ]
                    },
                    "ManagedPolicyArns": [
                        "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                    ],
                    "Policies": [
                        {
                            "PolicyName": "getAllItemsFunctionRolePolicy0",
                            "PolicyDocument": {
                                "Statement": [
                                    {
                                        "Action": [
                                            "dynamodb:GetItem",
                                            "dynamodb:DeleteItem",
                                            "dynamodb:PutItem",
                                            "dynamodb:Scan",
                                            "dynamodb:Query",
                                            "dynamodb:UpdateItem",
                                            "dynamodb:BatchWriteItem",
                                            "dynamodb:BatchGetItem",
                                            "dynamodb:DescribeTable",
                                            "dynamodb:ConditionCheckItem"
                                        ],
                                        "Resource": [
                                            {
                                                "Fn::Sub": [
                                                    "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                    {
                                                        "tableName": {
                                                            "Ref": "SampleTable"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                    {
                                                        "tableName": {
                                                            "Ref": "SampleTable"
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "Effect": "Allow"
                                    }
                                ]
                            }
                        }
                    ],
                    "Tags": [
                        {
                            "Value": "SAM",
                            "Key": "lambda:createdBy"
                        }
                    ]
                }
            },
            "putItemFunctionRole": {
                "Type": "AWS::IAM::Role",
                "Properties": {
                    "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Action": [
                                    "sts:AssumeRole"
                                ],
                                "Effect": "Allow",
                                "Principal": {
                                    "Service": [
                                        "lambda.amazonaws.com"
                                    ]
                                }
                            }
                        ]
                    },
                    "ManagedPolicyArns": [
                        "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                    ],
                    "Policies": [
                        {
                            "PolicyName": "putItemFunctionRolePolicy0",
                            "PolicyDocument": {
                                "Statement": [
                                    {
                                        "Action": [
                                            "dynamodb:GetItem",
                                            "dynamodb:DeleteItem",
                                            "dynamodb:PutItem",
                                            "dynamodb:Scan",
                                            "dynamodb:Query",
                                            "dynamodb:UpdateItem",
                                            "dynamodb:BatchWriteItem",
                                            "dynamodb:BatchGetItem",
                                            "dynamodb:DescribeTable",
                                            "dynamodb:ConditionCheckItem"
                                        ],
                                        "Resource": [
                                            {
                                                "Fn::Sub": [
                                                    "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}",
                                                    {
                                                        "tableName": {
                                                            "Ref": "SampleTable"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*",
                                                    {
                                                        "tableName": {
                                                            "Ref": "SampleTable"
                                                        }
                                                    }
                                                ]
                                            }
                                        ],
                                        "Effect": "Allow"
                                    }
                                ]
                            }
                        }
                    ],
                    "Tags": [
                        {
                            "Value": "SAM",
                            "Key": "lambda:createdBy"
                        }
                    ]
                }
            },
            "getByIdFunction": {
                "Type": "AWS::Lambda::Function",
                "Properties": {
                    "Code": {
                        "S3Bucket": "sam.hello",
                        "S3Key": "f61f6dd54d56f7f8fe4ed619cf77fdd4"
                    },
                    "Description": "A simple example includes a HTTP get method to get one item by id from a DynamoDB table.",
                    "Tags": [
                        {
                            "Value": "SAM",
                            "Key": "lambda:createdBy"
                        }
                    ],
                    "MemorySize": 128,
                    "Environment": {
                        "Variables": {
                            "SAMPLE_TABLE": {
                                "Ref": "SampleTable"
                            },
                            "LOCAL_DYNAMODB_ENDPOINT": "http://localhost:8000"
                        }
                    },
                    "Handler": "src/handlers/get-by-id.getByIdHandler",
                    "Role": {
                        "Fn::GetAtt": [
                            "getByIdFunctionRole",
                            "Arn"
                        ]
                    },
                    "Architectures": [
                        "x86_64"
                    ],
                    "Timeout": 100,
                    "Runtime": "nodejs14.x"
                }
            },
            "ServerlessRestApiProdStage": {
                "Type": "AWS::ApiGateway::Stage",
                "Properties": {
                    "DeploymentId": {
                        "Ref": "ServerlessRestApiDeploymenta4d359a69a"
                    },
                    "RestApiId": {
                        "Ref": "ServerlessRestApi"
                    },
                    "StageName": "Prod"
                }
            },
            "ServerlessRestApiDeploymenta4d359a69a": {
                "Type": "AWS::ApiGateway::Deployment",
                "Properties": {
                    "RestApiId": {
                        "Ref": "ServerlessRestApi"
                    },
                    "Description": "RestApi deployment id: a4d359a69a7b7d3809272fca52eacec55c21d54f",
                    "StageName": "Stage"
                }
            },
            "ServerlessRestApi": {
                "Type": "AWS::ApiGateway::RestApi",
                "Properties": {
                    "Body": {
                        "info": {
                            "version": "1.0",
                            "title": {
                                "Ref": "AWS::StackName"
                            }
                        },
                        "paths": {
                            "/": {
                                "post": {
                                    "x-amazon-apigateway-integration": {
                                        "httpMethod": "POST",
                                        "type": "aws_proxy",
                                        "uri": {
                                            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${putItemFunction.Arn}/invocations"
                                        }
                                    },
                                    "responses": {}
                                },
                                "get": {
                                    "x-amazon-apigateway-integration": {
                                        "httpMethod": "POST",
                                        "type": "aws_proxy",
                                        "uri": {
                                            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getAllItemsFunction.Arn}/invocations"
                                        }
                                    },
                                    "responses": {}
                                }
                            },
                            "/{id}": {
                                "get": {
                                    "x-amazon-apigateway-integration": {
                                        "httpMethod": "POST",
                                        "type": "aws_proxy",
                                        "uri": {
                                            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getByIdFunction.Arn}/invocations"
                                        }
                                    },
                                    "responses": {}
                                }
                            }
                        },
                        "swagger": "2.0"
                    }
                }
            },
            "getByIdFunctionApiPermissionProd": {
                "Type": "AWS::Lambda::Permission",
                "Properties": {
                    "Action": "lambda:InvokeFunction",
                    "Principal": "apigateway.amazonaws.com",
                    "FunctionName": {
                        "Ref": "getByIdFunction"
                    },
                    "SourceArn": {
                        "Fn::Sub": [
                            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/*",
                            {
                                "__Stage__": "*",
                                "__ApiId__": {
                                    "Ref": "ServerlessRestApi"
                                }
                            }
                        ]
                    }
                }
            }
        }
    },
    "StagesAvailable": [
        "Original",
        "Processed"
    ]
}
